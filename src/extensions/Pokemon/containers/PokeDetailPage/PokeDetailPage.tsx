import axios from "axios";
import { useEffect, useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import { Ability, PokemonDetail } from "../../../../types";
import PokeType from "../../components/PokeType";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faAngleDoubleLeft,
  faAngleDoubleRight,
} from "@fortawesome/free-solid-svg-icons";
import { useSelector } from "../../../../lib/store";
import { getTotalPokemon } from "../PokeListPage/PokeListPage.duck";
import style from "./PokemonDetail.module.css";

const PokeDetail = () => {
  const totalPokemon = useSelector(getTotalPokemon);
  const navigate = useNavigate();
  const [pokemon, setPokemon] = useState<PokemonDetail>();
  const { id } = useParams();

  function capitalizeFirstLetter(string: string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }
  const pokeIndex = [
    1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
    22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
    60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
    98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
    113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
    128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
    158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
    173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
    188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
    203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
    218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
    233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
    248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
    263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
    278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292,
    293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307,
    308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322,
    323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337,
    338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352,
    353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367,
    368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382,
    383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
    398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
    413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
    428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
    443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
    458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
    473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
    488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
    503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
    518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
    533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
    548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
    563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
    578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
    593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
    608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
    623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
    638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
    653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
    668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
    683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
    698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
    713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
    728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
    743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
    758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
    773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
    788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
    803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
    818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
    833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
    848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
    863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
    878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
    893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
    908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
    923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
    938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952,
    953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
    968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
    983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
    998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
    1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
    1023, 1024, 1025, 10001, 10002, 10003, 10004, 10005, 10006, 10007, 10008,
    10009, 10010, 10011, 10012, 10013, 10014, 10015, 10016, 10017, 10018, 10019,
    10020, 10021, 10022, 10023, 10024, 10025, 10026, 10027, 10028, 10029, 10030,
    10031, 10032, 10033, 10034, 10035, 10036, 10037, 10038, 10039, 10040, 10041,
    10042, 10043, 10044, 10045, 10046, 10047, 10048, 10049, 10050, 10051, 10052,
    10053, 10054, 10055, 10056, 10057, 10058, 10059, 10060, 10061, 10062, 10063,
    10064, 10065, 10066, 10067, 10068, 10069, 10070, 10071, 10072, 10073, 10074,
    10075, 10076, 10077, 10078, 10079, 10080, 10081, 10082, 10083, 10084, 10085,
    10086, 10087, 10088, 10089, 10090, 10091, 10092, 10093, 10094, 10095, 10096,
    10097, 10098, 10099, 10100, 10101, 10102, 10103, 10104, 10105, 10106, 10107,
    10108, 10109, 10110, 10111, 10112, 10113, 10114, 10115, 10116, 10117, 10118,
    10119, 10120, 10121, 10122, 10123, 10124, 10125, 10126, 10127, 10128, 10129,
    10130, 10131, 10132, 10133, 10134, 10135, 10136, 10137, 10138, 10139, 10140,
    10141, 10142, 10143, 10144, 10145, 10146, 10147, 10148, 10149, 10150, 10151,
    10152, 10153, 10154, 10155, 10156, 10157, 10158, 10159, 10160, 10161, 10162,
    10163, 10164, 10165, 10166, 10167, 10168, 10169, 10170, 10171, 10172, 10173,
    10174, 10175, 10176, 10177, 10178, 10179, 10180, 10181, 10182, 10183, 10184,
    10185, 10186, 10187, 10188, 10189, 10190, 10191, 10192, 10193, 10194, 10195,
    10196, 10197, 10198, 10199, 10200, 10201, 10202, 10203, 10204, 10205, 10206,
    10207, 10208, 10209, 10210, 10211, 10212, 10213, 10214, 10215, 10216, 10217,
    10218, 10219, 10220, 10221, 10222, 10223, 10224, 10225, 10226, 10227, 10228,
    10229, 10230, 10231, 10232, 10233, 10234, 10235, 10236, 10237, 10238, 10239,
    10240, 10241, 10242, 10243, 10244, 10245, 10246, 10247, 10248, 10249, 10250,
    10251, 10252, 10253, 10254, 10255, 10256, 10257, 10258, 10259, 10260, 10261,
    10262, 10263, 10264, 10265, 10266, 10267, 10268, 10269, 10270, 10271, 10272,
    10273, 10274, 10275, 10276, 10277,
  ];
  function convertHeight(height: number) {
    const cm = height * 10;
    const ft = Math.floor(cm / 30.48);
    const inch = Math.round((cm / 30.48 - ft) * 12);
    return `${ft}' ${inch}"`;
  }
  useEffect(() => {
    axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`).then((res) => {
      const { name, abilities, stats, types, height, weight, sprites } =
        res.data;
      setPokemon({ name, abilities, stats, types, height, weight, sprites });
    });
  }, [id]);

  const handleClick = () => {
    navigate("/");
  };
  const handleMovePrev = () => {
    if (id && +id > 1) navigate(`/pokemon/${+id - 1}`);
  };
  const handleMoveNext = () => {
    if (id && +id < totalPokemon) navigate(`/pokemon/${+id + 1}`);
  };
  const pokemonAbilities: Ability[] | undefined =
    pokemon && pokemon.abilities.filter((item) => item.is_hidden === false);

  return (
    <>
      {pokemon && (
        <div className={style.detail_container}>
          <button onClick={handleMovePrev}>
            <FontAwesomeIcon icon={faAngleDoubleLeft} />
          </button>
          <div className={style.pokemon_detail}>
            <div className={style.pokemon_detail_header}>
              <button onClick={handleClick}>Back</button>
              <div>
                <h1>{capitalizeFirstLetter(pokemon.name)}</h1>
              </div>
              <div></div>
            </div>
            <div className={style.pokemon_detail_body}>
              <div className={style.pokemon_image}>
                <img src={pokemon.sprites.front_default} alt="" />
              </div>
              <div className={style.pokemon_content}>
                <div className={style.pokemon_box}>
                  <div>
                    <h2 className={style.detail_title}>Height</h2>
                    <p>{convertHeight(pokemon.height)}</p>
                  </div>
                  <div>
                    <h2 className={style.detail_title}>Weight</h2>
                    <p>{(pokemon.weight / 4.5359237).toFixed(1)} lbs</p>
                  </div>
                  <div>
                    <h2 className={style.detail_title}>Abilities</h2>
                    {pokemonAbilities?.map((item, index) => {
                      return (
                        <p key={index}>
                          {capitalizeFirstLetter(item.ability.name)}
                        </p>
                      );
                    })}
                  </div>
                </div>
                <div className={style.pokemon_type}>
                  <h2>Type</h2>
                  <div className={style.type_container}>
                    {pokemon.types.map((item, index) => (
                      <PokeType key={index} name={item.type.name} />
                    ))}
                  </div>
                </div>
                <div className={style.pokemon_stat}>
                  <h2>Statitics</h2>
                  <table>
                    <tbody>
                      <tr>
                        <th>HP</th>
                        <th>Attack</th>
                        <th>Defense</th>
                        <th>Special-attack</th>
                        <th>Special-defense</th>
                        <th>Speed</th>
                      </tr>
                      <tr>
                        <td>{pokemon.stats[0].base_stat}</td>
                        <td>{pokemon.stats[1].base_stat}</td>
                        <td>{pokemon.stats[2].base_stat}</td>
                        <td>{pokemon.stats[3].base_stat}</td>
                        <td>{pokemon.stats[4].base_stat}</td>
                        <td>{pokemon.stats[5].base_stat}</td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>

          <button onClick={handleMoveNext}>
            <FontAwesomeIcon icon={faAngleDoubleRight} />
          </button>
        </div>
      )}
    </>
  );
};

export default PokeDetail;
